.TH "tmx::Layer" 3 "Tue Dec 31 2019" "Version 1.0.0" "tmxlite" \" -*- nroff -*-
.ad l
.nh
.SH NAME
tmx::Layer \- Represents a layer of a tmx format tile map\&. This is an abstract base class from which all layer types are derived\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Layer\&.hpp>\fP
.PP
Inherited by \fBtmx::ImageLayer\fP, \fBtmx::LayerGroup\fP, \fBtmx::ObjectGroup\fP, and \fBtmx::TileLayer\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBType\fP { \fBTile\fP, \fBObject\fP, \fBImage\fP, \fBGroup\fP }"
.br
.ti -1c
.RI "using \fBPtr\fP = std::unique_ptr< \fBLayer\fP >"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual Type \fBgetType\fP () const =0"
.br
.RI "Returns a Type value representing the concrete type\&. Use this when deciding which conrete layer type to use when calling the templated function \fBgetLayerAs<T>()\fP "
.ti -1c
.RI "template<typename T > T & \fBgetLayerAs\fP ()"
.br
.RI "Use this to get a reference to the concrete layer type which this layer points to\&. Use \fBgetType()\fP to return the type value of this layer and determine if the concrete type is \fBTileLayer\fP, \fBObjectGroup\fP, \fBImageLayer\fP, or \fBLayerGroup\fP\&. "
.ti -1c
.RI "template<typename T > const T & \fBgetLayerAs\fP () const"
.br
.ti -1c
.RI "virtual void \fBparse\fP (const pugi::xml_node &)=0"
.br
.RI "Attempts to parse the specific node layer type\&. "
.ti -1c
.RI "const std::string & \fBgetName\fP () const"
.br
.RI "Returns the name of the layer\&. "
.ti -1c
.RI "float \fBgetOpacity\fP () const"
.br
.RI "Returns the opacity value for the layer\&. "
.ti -1c
.RI "bool \fBgetVisible\fP () const"
.br
.RI "Returns whether this layer is visible or not\&. "
.ti -1c
.RI "const \fBVector2i\fP & \fBgetOffset\fP () const"
.br
.RI "Returns the offset from the top left corner of the layer, in pixels\&. "
.ti -1c
.RI "const std::vector< \fBProperty\fP > & \fBgetProperties\fP () const"
.br
.RI "Returns the list of properties of this layer\&. "
.ti -1c
.RI "template<> \fBImageLayer\fP & \fBgetLayerAs\fP ()"
.br
.ti -1c
.RI "template<> \fBLayerGroup\fP & \fBgetLayerAs\fP ()"
.br
.ti -1c
.RI "template<> \fBObjectGroup\fP & \fBgetLayerAs\fP ()"
.br
.ti -1c
.RI "template<> \fBTileLayer\fP & \fBgetLayerAs\fP ()"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "void \fBsetName\fP (const std::string &name)"
.br
.ti -1c
.RI "void \fBsetOpacity\fP (float opacity)"
.br
.ti -1c
.RI "void \fBsetVisible\fP (bool visible)"
.br
.ti -1c
.RI "void \fBsetOffset\fP (std::int32_t x, std::int32_t y)"
.br
.ti -1c
.RI "void \fBaddProperty\fP (const pugi::xml_node &node)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Represents a layer of a tmx format tile map\&. This is an abstract base class from which all layer types are derived\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for tmxlite from the source code\&.
