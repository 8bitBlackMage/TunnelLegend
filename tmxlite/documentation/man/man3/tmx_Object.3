.TH "tmx::Object" 3 "Tue Dec 31 2019" "Version 1.0.0" "tmxlite" \" -*- nroff -*-
.ad l
.nh
.SH NAME
tmx::Object \- Objects are stored in \fBObjectGroup\fP layers\&. Objects may be rectangular, elliptical, polygonal or a polyline\&. Rectangular and elliptical Objects have their size determined via the AABB, whereas polygon and polyline shapes are defined by a list of points\&. Objects are rectangular by default\&. Since version 1\&.0 Objects also support \fBText\fP nodes\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Object\&.hpp>\fP
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBShape\fP { \fBRectangle\fP, \fBEllipse\fP, \fBPoint\fP, \fBPolygon\fP, \fBPolyline\fP, \fBText\fP }"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBparse\fP (const pugi::xml_node &)"
.br
.RI "Attempts to parse the given xml node and read the \fBObject\fP properties if it is valid\&. "
.ti -1c
.RI "std::uint32_t \fBgetUID\fP () const"
.br
.RI "Returns the unique ID of the \fBObject\fP\&. "
.ti -1c
.RI "const std::string & \fBgetName\fP () const"
.br
.RI "Returns the name of the \fBObject\fP\&. "
.ti -1c
.RI "const std::string & \fBgetType\fP () const"
.br
.RI "Returns the type of the \fBObject\fP, as defined in the editor\&. "
.ti -1c
.RI "const \fBVector2f\fP & \fBgetPosition\fP () const"
.br
.RI "Returns the position of the \fBObject\fP in pixels\&. "
.ti -1c
.RI "const \fBFloatRect\fP & \fBgetAABB\fP () const"
.br
.RI "Returns the global Axis Aligned Bounding Box\&. The AABB is positioned via the left and top properties, and define the \fBObject\fP's width and height\&. This can be used to derive the shape of the \fBObject\fP if it is rectangular or elliptical\&. "
.ti -1c
.RI "float \fBgetRotation\fP () const"
.br
.RI "Returns the rotation of the \fBObject\fP in degrees clockwise\&. "
.ti -1c
.RI "uint32_t \fBgetTileID\fP () const"
.br
.RI "Returns the global tile ID associated with the \fBObject\fP if there is one\&. This is used to draw the \fBObject\fP (and therefore the \fBObject\fP must be rectangular) "
.ti -1c
.RI "bool \fBvisible\fP () const"
.br
.RI "Returns whether or not the \fBObject\fP is visible\&. "
.ti -1c
.RI "Shape \fBgetShape\fP () const"
.br
.RI "Returns the Shape type of the \fBObject\fP\&. "
.ti -1c
.RI "const std::vector< \fBVector2f\fP > & \fBgetPoints\fP () const"
.br
.RI "Returns a reference to the vector of points which make up the \fBObject\fP\&. If the \fBObject\fP is rectangular or elliptical then the vector will be empty\&. Point coordinates are in pixels, relative to the object position\&. "
.ti -1c
.RI "const std::vector< \fBProperty\fP > & \fBgetProperties\fP () const"
.br
.RI "Returns a reference to the vector of properties belonging to the \fBObject\fP\&. "
.ti -1c
.RI "const \fBText\fP & \fBgetText\fP () const"
.br
.RI "Returns a \fBText\fP struct containing information about any text this object may have, such as font data and formatting\&. If an object does not contain any text information this struct will be populated with default values\&. Use \fBgetShape()\fP to determine if this object is in fact a text object\&. "
.ti -1c
.RI "\fBText\fP & \fBgetText\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
Objects are stored in \fBObjectGroup\fP layers\&. Objects may be rectangular, elliptical, polygonal or a polyline\&. Rectangular and elliptical Objects have their size determined via the AABB, whereas polygon and polyline shapes are defined by a list of points\&. Objects are rectangular by default\&. Since version 1\&.0 Objects also support \fBText\fP nodes\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for tmxlite from the source code\&.
